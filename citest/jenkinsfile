#!groovy

pipeline {  
  agent none	// force each stage to have an agent

  //environment {
      // DOCKER_IMAGE_TAG = "my-app:build-${env.BUILD_ID}"
  //}
	
  stages {
  
    stage('Maven Install') {
	agent any    
      //agent {
      //  docker {
      //    image 'maven:3.5.0'
      //  }
      //}
      steps {
        sh '/var/lib/maven/bin/mvn -f citest/pom.xml clean package -U'
      }       
	    
	//post {
         // always {
          //  junit 'citest/target/surefire-reports/*.xml'
          //}    
       // }
    } 
    stage('Docker Build') {
      agent any
      steps {
        sh 'docker build -t localhost:5000/citest:latest citest --rm'
      }    
    }
    stage('Docker Push') {
      agent any
      steps {
        //withCredentials([usernamePassword(credentialsId: 'dockerHub', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
        //  sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
           sh 'docker push localhost:5000/citest:latest'
        //}
      }
    }
    
    stage('Docker Launch') {
      agent any
      steps {
	sh 'docker rm $(docker stop $(docker ps -a -q --filter name=iTest))'
        sh 'docker run --name iTest -p 8082:8080 -d localhost:5000/citest:latest'        
      }
    }
	  		
   // stage('Test'){
	//agent any
	//agent {
        //  docker {
        //    image 'maven:3.5.0'
        //  }
        //}
        //when {
        //    environment name: 'run_test_only', value: 'yes'
        //}
        //steps{
        //    sh '/var/lib/maven/bin/mvn -f citest/pom.xml verify' 	//use local maven 
        //}
	//post {
        //  always {
         //   junit 'citest/target/failsafe-reports/*.xml'         
         // }    
       // }
	
    //}
	  
    //stage('Docker Teardown') {
     // agent any
     // steps {
        //sh 'docker rm $(docker stop $(docker ps -a -q --filter name=iTest))'        
     // }
    //}   		
	  
  }  

	build 'citest-it'
}
